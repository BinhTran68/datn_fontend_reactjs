import React, { useState } from 'react';
import styles from './CartPage.module.css';

const CartPage = () => {
  const [quantity, setQuantity] = useState(1);
  const [isCheckoutModalVisible, setIsCheckoutModalVisible] = useState(false);
  const [isPaymentStep, setIsPaymentStep] = useState(false);
  const [customerInfo, setCustomerInfo] = useState({
    gender: 'Anh',
    name: '',
    phone: '',
    email: '',
    address: '',
    deliveryOption: 'Giao h√†ng t·∫≠n nh√†',
    note: '',
  });

  // D·ªØ li·ªáu s·∫£n ph·∫©m
  const product = {
    name: 'Gi√†y Adidas Stan Smith Fairway M20324 - 36',
    price: 2100000,
    image: 'https://authentic-shoes.com/wp-content/uploads/2023/04/8880_01.jpg_c2f0a7080647417eb4a17324fed9919f-768x343.jpeg'
  };

  const totalPrice = product.price * quantity;

  const paymentMethods = [
    {
      id: 'vietqr',
      name: 'Qu√©t m√£ chuy·ªÉn kho·∫£n VietQR',
      description: 'Ghi nh·∫≠n giao d·ªãch t·ª©c th√¨. QR ƒë∆∞·ª£c ch·∫•p nh·∫≠n b·ªüi 40+ Ng√¢n h√†ng v√† 4 V√≠ ƒëi·ªán t·ª≠.',
      icon: 'üí≥'
    },
    {
      id: 'atm',
      name: 'Th·∫ª ATM',
      description: '',
      icon: 'üèß'
    },
    {
      id: 'credit',
      name: 'Th·∫ª Visa, MasterCard, JCB',
      description: '',
      icon: 'üí≥'
    },
    {
      id: 'cod',
      name: 'Giao h√†ng thu ti·ªÅn (COD)',
      description: '',
      icon: 'üöö'
    },
    {
      id: 'bank',
      name: 'T√†i kho·∫£n ng√¢n h√†ng',
      description: 'Ch·∫•p nh·∫≠n b·ªüi MB Bank, PVcom Bank',
      icon: 'üè¶'
    }
  ];

  const increaseQuantity = () => setQuantity(quantity + 1);
  const decreaseQuantity = () => {
    if (quantity > 1) setQuantity(quantity - 1);
  };

  const handleButtonClick = (message) => {
    alert(message);
  };

  const handleBuyNowClick = () => {
    setIsCheckoutModalVisible(true);
    setIsPaymentStep(false);
  };

  const handleCloseCheckoutModal = () => {
    setIsCheckoutModalVisible(false);
    setIsPaymentStep(false);
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setCustomerInfo(prevState => ({
      ...prevState,
      [name]: value,
    }));
  };

  const handleDeliveryOptionChange = (e) => {
    setCustomerInfo(prevState => ({
      ...prevState,
      deliveryOption: e.target.value,
    }));
  };

  const handleSubmit = () => {
    // Validate form
    if (!customerInfo.name || !customerInfo.phone || !customerInfo.email || 
        (customerInfo.deliveryOption === 'Giao h√†ng t·∫≠n nh√†' && !customerInfo.address)) {
      alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc');
      return;
    }
    setIsPaymentStep(true);
  };

  const handleBackToInfo = () => {
    setIsPaymentStep(false);
  };

  return (
    <div>
      <h2>Cart</h2>
      <div className="">
        <div className="row">
          <div className="col-md-8">
            <div className={`row container-fluid text-center`}>
              <div className="col-2">S·∫¢N PH·∫®M</div>
              <div className="col-1"></div>
              <div className="col-3"></div>
              <div className="col-2">GI√Å</div>
              <div className="col-2">S·ªê L∆Ø·ª¢NG</div>
              <div className="col-2">T·∫†M T√çNH</div>
            </div><hr />
            <div className="row align-items-center">
              <div className="col-2">
                <img src={product.image} alt={product.name} width="60" />
              </div>
              <div className="col-4">
                <p>{product.name}</p>
              </div>
              <div className="col-2">
                <strong>{product.price.toLocaleString()} ƒë</strong>
              </div>
              <div className="col-2 d-flex align-items-center">
                <button onClick={decreaseQuantity} className="btn btn-sm btn-outline-secondary">-</button>
                <input type="text" value={quantity} readOnly className="form-control text-center mx-2" style={{ width: '40px' }} />
                <button onClick={increaseQuantity} className="btn btn-sm btn-outline-secondary">+</button>
              </div>
              <div className="col-2">
                <strong>{totalPrice.toLocaleString()} ƒë</strong>
              </div>
            </div>
            <hr />
            <a href="#" className={styles.button}>‚Üê TI·∫æP T·ª§C XEM S·∫¢N PH·∫®M</a>
          </div>

          <div className="col-md-4">
            <div>
              <h4>C·ªông gi·ªè h√†ng</h4>
            </div><hr />
            <div>T·∫°m t√≠nh: {totalPrice.toLocaleString()} ƒë</div><hr />
            <div>T·ªïng: {totalPrice.toLocaleString()} ƒë</div><hr />

            <div className={styles.buttonContainer}>
              <button
                className={`${styles.button} ${styles.buttonRed} col-4 mb-2`}
                onClick={handleBuyNowClick}
              >MUA NGAY</button>
              <button
                className={`${styles.button} ${styles.buttonBlue} col-4 mb-2`}
                onClick={() => handleButtonClick('Ch·ªçn tr·∫£ g√≥p qua th·∫ª!')}
              >TR·∫¢ G√ìP QUA TH·∫∫</button>
              <button
                className={`${styles.button} ${styles.buttonYellow} col-4 mb-2`}
                onClick={() => handleButtonClick('Mua ngay - Tr·∫£ sau th√†nh c√¥ng!')}
              >MUA NGAY - TR·∫¢ SAU</button>
            </div>
            <button
              className={`${styles.checkoutButton} col-12`}
              onClick={() => handleButtonClick('Ti·∫øn h√†nh thanh to√°n!')}
            >TI·∫æN H√ÄNH THANH TO√ÅN</button>
            <br />

            <div className={styles.discountCodeSection}>
              <label htmlFor="discount-code" className={styles.discountCodeLabel}>M√£ ∆∞u ƒë√£i</label><hr /><br />
              <input type="text" id="discount-code" className={styles.discountCodeInput} placeholder="M√£ ∆∞u ƒë√£i" />
              <button
                className={`${styles.buttond} col-12`}
                onClick={() => handleButtonClick('√Åp d·ª•ng m√£ ∆∞u ƒë√£i!')}
              >√Åp d·ª•ng</button>
            </div>
          </div>
        </div>
      </div>

      {isCheckoutModalVisible && (
        <div className={`${styles.modalOverlay} ${isCheckoutModalVisible ? styles.modalOverlayShow : ''}`}>
          <div className={`${styles.modalContent} ${isCheckoutModalVisible ? styles.modalContentShow : ''}`}>
            <div className={styles.modalHeader}>
              <h3>{isPaymentStep ? 'Ch·ªçn h√¨nh th·ª©c thanh to√°n' : 'Th√¥ng tin thanh to√°n'}</h3>
              <span className={styles.closeButton} onClick={handleCloseCheckoutModal}>&times;</span>
            </div>
            
            {!isPaymentStep ? (
              // Form th√¥ng tin kh√°ch h√†ng
              <div className={styles.modalBody}>
                <div className="row mb-3 align-items-center">
                  <div className="col-2">
                    <img src={product.image} alt={product.name} width="60" />
                  </div>
                  <div className="col-8">
                    <p className="mb-0">{product.name}</p>
                    <p className="mb-0">S·ªë l∆∞·ª£ng: {quantity}</p>
                    <p className="mb-0">Gi√°: {totalPrice.toLocaleString()} ƒë</p>
                  </div>
                </div>
                <hr />
                <h4>Th√¥ng tin kh√°ch h√†ng</h4>
                <div className="mb-3">
                  <label className="me-3">
                    <input
                      type="radio"
                      name="gender"
                      value="Anh"
                      checked={customerInfo.gender === 'Anh'}
                      onChange={handleChange}
                    />{' '}
                    Anh
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="gender"
                      value="Ch·ªã"
                      checked={customerInfo.gender === 'Ch·ªã'}
                      onChange={handleChange}
                    />{' '}
                    Ch·ªã
                  </label>
                </div>
                <div className="mb-3">
                  <label htmlFor="name" className="form-label">H·ªç v√† t√™n*</label>
                  <input
                    type="text"
                    className="form-control"
                    id="name"
                    name="name"
                    value={customerInfo.name}
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="mb-3">
                  <label htmlFor="phone" className="form-label">S·ªë ƒëi·ªán tho·∫°i*</label>
                  <input
                    type="tel"
                    className="form-control"
                    id="phone"
                    name="phone"
                    value={customerInfo.phone}
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="mb-3">
                  <label htmlFor="email" className="form-label">Email*</label>
                  <input
                    type="email"
                    className="form-control"
                    id="email"
                    name="email"
                    value={customerInfo.email}
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="alert alert-info" role="alert">
                  <i className="bi bi-envelope-fill me-2"></i> Th√¥ng tin ƒë∆°n h√†ng s·∫Ω ƒë∆∞·ª£c g·ª≠i qua email. Nh√† cung c·∫•p s·∫Ω li√™n h·ªá v·ªõi b·∫°n qua s·ªë ƒëi·ªán tho·∫°i.
                </div>
                <hr />
                <h4>Y√™u c·∫ßu nh·∫≠n h√†ng</h4>
                <div className="mb-3">
                  <label className="me-3">
                    <input
                      type="radio"
                      name="deliveryOption"
                      value="Giao h√†ng t·∫≠n nh√†"
                      checked={customerInfo.deliveryOption === 'Giao h√†ng t·∫≠n nh√†'}
                      onChange={handleDeliveryOptionChange}
                    />{' '}
                    Giao h√†ng t·∫≠n nh√†
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="deliveryOption"
                      value="Nh·∫≠n t·∫°i c·ª≠a h√†ng"
                      checked={customerInfo.deliveryOption === 'Nh·∫≠n t·∫°i c·ª≠a h√†ng'}
                      onChange={handleDeliveryOptionChange}
                    />{' '}
                    Nh·∫≠n t·∫°i c·ª≠a h√†ng
                  </label>
                </div>
                {customerInfo.deliveryOption === 'Giao h√†ng t·∫≠n nh√†' && (
                  <div className="mb-3">
                    <label htmlFor="address" className="form-label">ƒê·ªãa ch·ªâ nh·∫≠n h√†ng*</label>
                    <input
                      type="text"
                      className="form-control"
                      id="address"
                      name="address"
                      value={customerInfo.address}
                      onChange={handleChange}
                      required
                    />
                  </div>
                )}
                <div className="mb-3">
                  <label htmlFor="note" className="form-label">Ghi ch√∫ cho ng∆∞·ªùi b√°n</label>
                  <textarea
                    className="form-control"
                    id="note"
                    name="note"
                    value={customerInfo.note}
                    onChange={handleChange}
                  ></textarea>
                </div>
              </div>
            ) : (
              // Trang ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
              <div className={styles.modalBody}>
                <button onClick={handleBackToInfo} className="btn btn-link mb-4">
                  ‚Üê Quay l·∫°i
                </button>

                <div className="bg-light p-3 rounded mb-4">
                  <p className="mb-1">M√£ ƒë∆°n h√†ng: SLSEXW10</p>
                  <p className="mb-1">Ng∆∞·ªùi nh·∫≠n h√†ng: {customerInfo.gender} {customerInfo.name}, {customerInfo.phone}</p>
                  <p className="mb-0">ƒê·ªãa ch·ªâ nh·∫≠n h√†ng: {customerInfo.address || 'Nh·∫≠n t·∫°i c·ª≠a h√†ng'}</p>
                </div>

                <div className="payment-methods">
                  {paymentMethods.map((method) => (
                    <div
                      key={method.id}
                      className="border rounded p-3 mb-3 cursor-pointer hover:border-primary"
                      onClick={() => handleButtonClick(`ƒê√£ ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n: ${method.name}`)}
                    >
                      <div className="d-flex align-items-center">
                        <span className="me-3 fs-4">{method.icon}</span>
                        <div>
                          <h5 className="mb-1">{method.name}</h5>
                          {method.description && (
                            <p className="mb-0 small text-muted">{method.description}</p>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>

                <div className="mt-4 pt-3 border-top">
                  <div className="d-flex justify-content-between align-items-center">
                    <div className="small">
                    <a href="#" className="text-decoration-none me-3">ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</a>
                      <a href="#" className="text-decoration-none me-3">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</a>
                      <a href="#" className="text-decoration-none">Ch√≠nh s√°ch b·∫£o m·∫≠t</a>
                    </div>
                    <button className="btn btn-success">
                      H·ªó tr·ª£ tr·ª±c tuy·∫øn
                    </button>
                  </div>
                </div>
              </div>
            )}

            <div className={styles.modalFooter}>
              {!isPaymentStep ? (
                <button className="btn btn-primary" onClick={handleSubmit}>Ti·∫øp t·ª•c</button>
              ) : null}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default CartPage;














